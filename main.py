GLOBAL_PARSEC_IN_KILOMETERS: float = 30856775814900
GLOBAL_SPEED_OF_LIGHT: float = 299792.458


class Parsec:
    def __init__(self, time_unit: float, name: str):
        self.time_unit = time_unit
        self.name = name

    def show(self: float):
        list_time_unit = [seconds, minutes, hours, days, weeks, months, years, decades, centuries, millennia]
        if self > 0:
            print(f"–ß—Ç–æ –±—ã –ø—Ä–µ–æ–¥–æ–ª–µ—Ç—å {PARSEC_INPUT} –ø–∞—Ä—Å–µ–∫–æ–≤, –¥–≤–∏–≥–∞—è—Å—å —Å–æ\n—Å–∫–æ—Ä–æ—Å—Ç—å—é —Å–≤–µ—Ç–∞ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è:")
            for i in list_time_unit:
                print(f"{round(i.time_unit, 3)} {i.name}")
        elif self == 0:
            print("\033[31m{}".format(f'–ü–∞—Ä—Å–µ–∫–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å —Ä–∞–≤–Ω—ã –Ω—É–ª—é!'))
            return
        elif self < 0:
            print("\033[31m{}".format(f'–ü–∞—Ä—Å–µ–∫–∏ –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏!'))
            return
        print(f'\n{PARSEC_INPUT} –ø–∞—Ä—Å–µ–∫–æ–≤ = {round(PARSEC_INPUT * GLOBAL_PARSEC_IN_KILOMETERS)} –∫–º')
        print('ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£ü§£')


try:
    str_show = input("–í–≤–µ–¥–∏—Ç–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –≤ –ø–∞—Ä—Å–µ–∫–∞—Ö: ")
    PARSEC_INPUT = float(str_show.replace(',', '.'))
    parsecs_input_in_seconds = round((PARSEC_INPUT * GLOBAL_PARSEC_IN_KILOMETERS) / GLOBAL_SPEED_OF_LIGHT)
    seconds = Parsec(parsecs_input_in_seconds, '—Å–µ–∫—É–Ω–¥')
    minutes = Parsec(parsecs_input_in_seconds / 60, '–º–∏–Ω—É—Ç')
    hours = Parsec(parsecs_input_in_seconds / 3600, '—á–∞—Å–æ–≤')
    days = Parsec(parsecs_input_in_seconds / 86400, '–¥–Ω–µ–π')
    weeks = Parsec(parsecs_input_in_seconds / 604800, '–Ω–µ–¥–µ–ª—å')
    months = Parsec(parsecs_input_in_seconds / 2.628e+6, '–º–µ—Å—è—Ü–µ–≤')
    years = Parsec(parsecs_input_in_seconds / 3.154e+7, '–ª–µ—Ç')
    decades = Parsec(parsecs_input_in_seconds / 3.154e+8, '–¥–µ—Å—è—Ç–∏–ª–µ—Ç–∏–π')
    centuries = Parsec(parsecs_input_in_seconds / 3.154e+9, '–≤–µ–∫–æ–≤')
    millennia = Parsec(parsecs_input_in_seconds / 3.154e+10, '—Ç—ã—Å—è—á–µ–ª–µ—Ç–∏–π')
    print('-------------------------------')
    Parsec.show(seconds.time_unit)

except ValueError:
    print("\033[31m{}".format(f'–í–≤–µ–¥–µ–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è –≤ –ø–∞—Ä—Å–µ–∫–∞—Ö!'))
